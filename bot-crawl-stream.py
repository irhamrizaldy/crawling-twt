# -*- coding: utf-8 -*-
"""crawl-stream.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F4YIOQ_wnEp3rCkty4FQZYYOFvD8aUyu
"""
from tweepy.streaming import StreamListener
from tweepy import OAuthHandler
from tweepy import Stream
import datetime
import json, time, sys
import csv
import telegram

# API Twitter
consumer_key = 'rk2KT9RU8Pq2xsP0EkyfQvppk'
consumer_secret = 'ZT3r1vCbsME9c0LY4Pj2LxnM2fzgPB93tZEy89wzan4ryIDEjY'
access_token = '1439979991261802501-L2pwzmBQzgLOACva2eWbUZpKo41Jje'
access_token_secret = 'SBVhQM8Pt1xpKRIkwZpSYPraNuDWKCPnbTEsy4MNYPsDG'

auth = OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

# API Telegram
api_key = '2010624549:AAGHEwhPkNtjLMFWjY3BpLtkXytWT8LDrCg'
user_id = '-1001735202458'

class StdOutListener(StreamListener):
    def __init__(self, api=None):
        super(StdOutListener, self).__init__()
        self.num_tweets = 0     # buat variabel inisialisasi jumlah tweet

    def on_status(self, status):
        # record = {'TWEET': status.text, 'LINK': 'https://twitter.com/'+str(status.user.screen_name)+'/status/'+str(status.id)}       # simpan hasil response kedalam variabel (contoh: ambil text/tweet dan created_at/tanggal tweet)
        tweet = status.text
        link = 'https://twitter.com/'+str(status.user.screen_name)+'/status/'+str(status.id)
        username = str(status.user.screen_name)
        if (username == 'joktugfess' or username == 'basejokitugas') :
            bot = telegram.Bot(token=api_key)
            record = bot.send_message(chat_id=user_id, text=tweet + " " + link)
            print(record)
          
        self.num_tweets += 1        # setiap satu tweet yang berhasil didapat dihitung dengan menambahkan satu
        if status.lang == 'in':     # filter tweet yang hanya berbahasa indonesia
          if self.num_tweets < 200:  # batasi jumlah tweet yang dicrawling sebanyak 20
              return True
          else:
              return False

    def on_error(self, status_code):
        if status_code == 420:
            print('Error on status', status)
            return False

    def on_limit(self, status):
        print('Limit threshold exceeded', status)

    def on_timeout(self, status):
        print('Stream disconnected; continuing...')


stream = Stream(auth, StdOutListener(), wait_on_rate_limit = True)
# stream.filter(track=['coding', 'joki web', 'joki website', 'buat web', 'bikin web', 'buat website', 'bikin website', 'joki buat program', 'joki program', 'joki ngoding', 'joki data mining', 'buat flowchart', 'bikin flowchart', 'joki coding', 'tugas coding', 'joki informatika', 'joki pemrograman', 'joki java', 'bantuin java', 'bantuin c++', 'bantuin python', 'tugas python', 'joki python'])   # menggunakan fungsi stream filter untuk mencari kata kunci
# stream.filter(track=['joktug!', 'Joktug!' 'bj!', 'Bj!', 'bJ!', 'BJ!'])   # menggunakan fungsi stream filter untuk mencari kata kunci
stream.filter(track=['koding', 'ngoding', 'buat program', 'bikin program', 'joki program', 'buat flowchart', 'bikin flowchart', 'joki informatika', 'informatika', 'joki pemrograman', 'pemrograman dasar', 'joki java', 'bantu java', 'joki python', 'bantu python', 'joki c++', 'bantu c++', 'joki c#', 'bantu c#', 'buat web', 'buat website', 'bikin web', 'bikin website', 'joki php', 'bantu php', 'joki html', 'bantu html'])